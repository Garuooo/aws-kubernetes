kubectl create namespace kafka
kubectl create -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka
kubectl get pod -n kafka --watch
kubectl apply -f kafka.yaml -n kafka 
kubectl logs deployment/strimzi-cluster-operator -n kafka -f

##install helm
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

## install prometheus operator
kubectl create namespace monitoring
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring
kubectl get pods -n monitoring

docker login
cat ~/.docker/config.json
kubectl create secret generic dockerhub-secret \
    --from-file=.dockerconfigjson=$HOME/.docker/config.json \
    --type=kubernetes.io/dockerconfigjson -n kafka 


kubectl get secret dockerhub-secret -n kafka  --output=yaml
kubectl apply -f kafka-connect.yaml -n kafka 


kubectl exec -it mysql-master-f744f8758-g9wxw -n kafka -- /bin/bash 
kubectl exec -it mysql-replica-8d8858b47-8rpnc -n kafka -- /bin/bash 

mysql -p
mysqlpw

USE mydatabase;
CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    position VARCHAR(100)
);
INSERT INTO employees (name, position) VALUES ('Alice Smith', 'Software Engineer');
INSERT INTO employees (name, position) VALUES ('Bob Johnson', 'Data Scientist');
INSERT INTO employees (name, position) VALUES ('Carol Williams', 'Product Manager');
